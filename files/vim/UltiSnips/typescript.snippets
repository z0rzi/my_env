priority 50

extends javascript

snippet singleton "Creates a Singleton Class" b
class ${1:Singleton} {
	static _instance: $1;
	static getInstance(): $1 {
		if (!$1._instance) $1._instance = new $1($2);
		return $1._instance;
	}
}
endsnippet

snippet ng_viewChild
@ViewChild('$1', { read: ViewContainerRef }) $1: ViewContainerRef;
endsnippet

snippet init_ng_component "Creates an Angular component" b
import { Component, OnInit } from '@angular/core';

@Component({
	selector: 'app${1/([A-Z])/-\l$1/g}',
	templateUrl: './${1/^([A-Z]*[a-z]*)$|([A-Z]*[a-z]+)([A-Z])/(?1:\l$1:\l$2-\l$3)/g}.component.html',
})
export class ${1:Something}Component implements OnInit {
	ngOnInit() {
	}
}
endsnippet

snippet init_ng_module "Creates an Angular module file" b
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';

import { ${1:Something}Component } from './${1/^[A-Z]/\l$0/}.component';

@NgModule({
  declarations: [$1Component],
  imports: [
    CommonModule,
    RouterModule,
  ],
  exports: [],
  providers: [],
  entryComponents: [$1Component]
})

export class $1Module {}
endsnippet


snippet init_ng_service "Creates an Angular service file" b
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';

@Injectable()
export class ${1:Something}Service {
  constructor(private httpClient: HttpClient) {}
  
  // Add '$1' in your component's imports, and
  // declare it in the constructor to use it
}
endsnippet
