#!/bin/bash

# Wrapper to handle git submodules

while [ ! -f "./.gitmodules" ]; do
    if [ $PWD = '/' ]; then
        echo 'Could not find file ".gitmodules" '
        exit 1
    fi
    cd ..
done

if [ "$#" -eq 0 ]; then
    echo 'USAGE = "gitsm <command to apply to each module>"'
    echo
    echo 'examples:'
    echo "gitsm 'rm node_modules && yarn'"
    echo "gitsm git status"
    echo "gitsm status"
    exit 1
fi

modules=`grep path .gitmodules | sed 's/^.*=//g'`
cmd=''
first_word=''
while [ $# -gt 0 ]; do
    [ ! "$first_word" ] && first_word=${1%% *}
    if [[ "$1" =~ ' ' ]]; then
        cmd="$cmd \"$1\""
    else
        cmd="$cmd $1"
    fi
    shift
done

gitcmds=`git config --get-regexp '^alias\.' | grep -o '^\S*' | sed 's/^\w*\.//g' | xargs`
gitcmds=" $gitcmds clone init add mv restore rm sparse-checkout bisect diff grep log show status branch commit merge rebase reset switch tag fetch pull push "

grep -q " $first_word " <<< "$gitcmds"
if [ $? -eq 0 ]; then
    # It's a git command
    for module in $modules; do
        [ ! -d $module ] && echo "❌ Could not find '$module', skipping..." && continue
        echo -e ">>>  Entering in '${BLUE}$module${NC}'"
        echo "―――――――――――――――――――――――――――――――――――――――――――――――――――"
        cd $module
        eval git $cmd
        cd ..
        echo
        echo
    done
else
    for module in $modules; do
        [ ! -d $module ] && echo "❌ Could not find '$module', skipping..." && continue
        echo -e ">>>  Entering in '${BLUE}$module${NC}'"
        echo "―――――――――――――――――――――――――――――――――――――――――――――――――――"
        cd $module
        bash -c "$cmd"
        cd ..
        echo
        echo
    done
fi
